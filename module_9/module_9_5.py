# Создаем пользовательский класс исключения, который наследуется от ValueError.
# Этот класс будет использоваться для обработки ошибок, связанных с некорректным шагом.
class StepValueError(ValueError):
    pass  # Класс остается пустым, так как нам нужно только наследование от ValueError.

class Iterator:
    def __init__(self, start, stop, step=1):
        """
        Конструктор класса Iterator.
        Принимает три параметра:
        - start: начальное значение итерации.
        - stop: конечное значение итерации.
        - step: шаг итерации (по умолчанию равен 1).
        """
        self.start = start  # Устанавливаем начальное значение.
        self.stop = stop    # Устанавливаем конечное значение.
        self.step = step    # Устанавливаем шаг.
        self.pointer = start  # Устанавливаем указатель на текущее значение (изначально равен start).

        # Проверяем, равен ли шаг нулю. Если да, выбрасываем исключение StepValueError.
        if self.step == 0:
            raise StepValueError('шаг не может быть равен 0')

    def __iter__(self):
        """
        Метод, который возвращает сам объект итератора.
        Сбрасывает указатель на начальное значение (start).
        """
        self.pointer = self.start  # Сбрасываем указатель на start.
        return self  # Возвращаем сам объект итератора.

    def __next__(self):
        """
        Метод, который возвращает следующее значение в итерации.
        Если итерация завершена (pointer выходит за пределы stop), выбрасывает StopIteration.
        """
        # Проверяем, завершена ли итерация:
        # Если шаг положительный и pointer >= stop, или шаг отрицательный и pointer <= stop.
        if (self.step > 0 and self.pointer >= self.stop) or (self.step < 0 and self.pointer <= self.stop):
            raise StopIteration  # Завершаем итерацию.

        current = self.pointer  # Запоминаем текущее значение.
        self.pointer += self.step  # Увеличиваем pointer на шаг.
        return current  # Возвращаем текущее значение.

# Пример 1: Попытка создать итератор с шагом 0.
try:
    iter1 = Iterator(100, 200, 0)  # Шаг равен 0, что вызовет исключение.
    for i in iter1:
        print(i, end=' ')
except StepValueError:
    print('Шаг указан неверно')  # Обрабатываем исключение и выводим сообщение.

# Пример 2: Итерация от -5 до 1 с шагом по умолчанию (1).
iter2 = Iterator(-5, 1)
for i in iter2:
    print(i, end=' ')  # Выводим значения: -5 -4 -3 -2 -1 0 1
print()  # Переход на новую строку.

# Пример 3: Итерация от 6 до 15 с шагом 2.
iter3 = Iterator(6, 15, 2)
for i in iter3:
    print(i, end=' ')  # Выводим значения: 6 8 10 12 14
print()  # Переход на новую строку.

# Пример 4: Итерация от 5 до 1 с шагом -1 (обратная итерация).
iter4 = Iterator(5, 1, -1)
for i in iter4:
    print(i, end=' ')  # Выводим значения: 5 4 3 2 1
print()  # Переход на новую строку.

# Пример 5: Итерация от 10 до 1 с шагом по умолчанию (1).
# Так как шаг положительный, а start > stop, итерация завершится сразу.
iter5 = Iterator(10, 1)
for i in iter5:
    print(i, end=' ')  # Ничего не выведется, так как итерация завершена.
print()  # Переход на новую строку.